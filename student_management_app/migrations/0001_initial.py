# Generated by Django 3.2.5 on 2021-07-14 18:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Teacher'), (3, 'Student')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('exam_name', models.CharField(max_length=100)),
                ('exam_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SectionOrBatch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('presentAddress', models.TextField(max_length=5000)),
                ('parmanentAddress', models.TextField(max_length=5000)),
                ('mobileNumber', models.CharField(max_length=14)),
                ('emergencyMobileNumber', models.CharField(max_length=14)),
                ('sscBoard', models.CharField(max_length=30)),
                ('sscPassingYear', models.IntegerField()),
                ('sscGPA', models.FloatField()),
                ('sscGroup', models.TextField(max_length=30)),
                ('hscBoard', models.CharField(max_length=30)),
                ('hscPassingYear', models.IntegerField()),
                ('hscGPA', models.FloatField()),
                ('hscGroup', models.TextField(max_length=30)),
                ('baUniversity', models.CharField(max_length=30)),
                ('baPassingYear', models.IntegerField()),
                ('baCGPA', models.FloatField()),
                ('baSubject', models.TextField(max_length=30)),
                ('gender', models.IntegerField()),
                ('currentInstitute', models.CharField(max_length=500)),
                ('dateOfBirth', models.DateField()),
                ('experience', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='student_management_app.classes')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=50)),
                ('profile_pic', models.FileField(upload_to='')),
                ('address', models.TextField()),
                ('fathersName', models.CharField(max_length=100)),
                ('fathersProfession', models.CharField(max_length=100)),
                ('fathersMobile', models.CharField(max_length=14)),
                ('mothersName', models.CharField(max_length=100)),
                ('mothersProfession', models.CharField(max_length=100)),
                ('mothersMobile', models.CharField(max_length=14)),
                ('dateOfBirth', models.DateField()),
                ('school', models.CharField(max_length=500)),
                ('presentAddress', models.TextField(max_length=5000)),
                ('parmanentAddress', models.TextField(max_length=5000)),
                ('mobile', models.CharField(max_length=14)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('batch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.classes')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_exam_marks', models.FloatField(default=0)),
                ('subject_assignment_marks', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_id', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='student_management_app.examination')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.students')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.subjects')),
            ],
        ),
        migrations.CreateModel(
            name='PCC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('batch_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch')),
                ('class_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='student_management_app.classes')),
                ('subject_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='student_management_app.subjects')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pay_upto', models.CharField(max_length=255)),
                ('bkash_nmb', models.CharField(max_length=13)),
                ('amount', models.IntegerField()),
                ('trans_id', models.CharField(max_length=100)),
                ('payment_status', models.IntegerField(default=0)),
                ('paid_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('paying_date', models.DateTimeField(auto_now_add=True)),
                ('payment_amount', models.IntegerField()),
                ('payment_upto', models.DateTimeField()),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.teachers')),
            ],
        ),
        migrations.CreateModel(
            name='OnlineClass',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('online_class_name', models.CharField(max_length=100)),
                ('online_class_link', models.CharField(max_length=500)),
                ('batch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.classes')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='FeesReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fees_date', models.CharField(default='00--00--0000', max_length=25)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.IntegerField(default=0)),
                ('batch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.classes')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackTeachers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.teachers')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.TextField()),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.students')),
            ],
        ),
        migrations.AddField(
            model_name='examination',
            name='batch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch'),
        ),
        migrations.AddField(
            model_name='examination',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.classes'),
        ),
        migrations.CreateModel(
            name='ClassAndPayment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('class_date', models.CharField(default='00--00--00', max_length=255)),
                ('per_class_charge', models.CharField(max_length=255)),
                ('from_time', models.CharField(max_length=100)),
                ('to_time', models.CharField(max_length=100)),
                ('status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pcc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.pcc')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.teachers')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.attendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='batch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sectionorbatch'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='class_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.classes'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.subjects'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
